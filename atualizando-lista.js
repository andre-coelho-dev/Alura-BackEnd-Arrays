<<<<<<< HEAD
const nomes = ["Jo√£o", "Ana", "Caio", "Lara", "Marjorie", "Leo"];

nomes.splice(1, 2, "Rodrigo");

console.log(nomes);


// Explica√ß√£o


// Atualizando elementos
// Temos que criar uma lista de chamada com os seguintes alunos:

// Jo√£o
// Ana
// Caio
// Lara
// Marjorie
// Leo
// Por√©m, Ana e Caio mudaram de escola e o Rodrigo entrou nessa sala. Nosso desafio ser√° atualizar a lista de chamada, removendo os nomes de Ana e Caio, e inserindo Rodrigo.

// Removendo nomes
// Anteriormente, aprendemos como remover um item do final da lista. Agora, descobriremos como remover um elemento do meio do array. No VS Code, vamos criar um arquivo chamado atualizando-lista.js. Declararemos uma constante chamada nomes que receber√° a lista atual de alunos:

// const nomes = ["Jo√£o", "Ana", "Caio", "Lara", "Marjorie", "Leo"];

// Para remover os nomes de Caio e Ana, utilizaremos outro m√©todo dos arrays do JavaScript ‚Äî o splice():

// const nomes = ["Jo√£o", "Ana", "Caio", "Lara", "Marjorie", "Leo"];

// nomes.splice();

// Em ingl√™s, o termo splice significa "emendar" ou "juntar". Cuidado para n√£o confundi-lo com o m√©todo slice() que abordamos na √∫ltima aula, j√° que seus nomes s√£o parecidos. At√© o funcionamento deles √© semelhante e pode causar confus√£o!

// O primeiro par√¢metro do m√©todo splice() √© o √≠ndice do elemento que queremos remover. Portanto, para remover o nome de Ana, passamos o √≠ndice 1:

// const nomes = ["Jo√£o", "Ana", "Caio", "Lara", "Marjorie", "Leo"];

// nomes.splice(1);

// O segundo par√¢metro √© a quantidade de itens que queremos remover a partir desse √≠ndice. Logo, para remover o nome de Ana e de Caio, informaremos o valor 2:

// const nomes = ["Jo√£o", "Ana", "Caio", "Lara", "Marjorie", "Leo"];

// nomes.splice(1, 2);

// Ap√≥s realizar o splice(), vamos imprimir a lista de nomes com um console.log():

// const nomes = ["Jo√£o", "Ana", "Caio", "Lara", "Marjorie", "Leo"];

// nomes.splice(1, 2);

// console.log(nomes);

// Vamos salvar o arquivo e execut√°-lo no terminal integrado:

// node atualizando-lista.js

// [ 'Jo√£o', 'Lara', 'Marjorie', 'Leo' ]

// Ana e Caio n√£o constam mais na lista, conseguimos remover os nomes desejados com sucesso!

// Adicionando nomes
// A seguir, vamos adicionar Rodrigo √† lista de chamada. Com os conhecimentos das aulas anteriores, sabemos que uma op√ß√£o √© usar o m√©todo push() para inserir um item:

// const nomes = ["Jo√£o", "Ana", "Caio", "Lara", "Marjorie", "Leo"];

// nomes.splice(1, 2);
// nomes.push("Rodrigo");

// console.log(nomes);

// Ap√≥s salvar as altera√ß√µes, executaremos o arquivo no terminal:

// node atualizando-lista.js

// [ 'Jo√£o', 'Lara', 'Marjorie', 'Leo', 'Rodrigo' ]

// Conseguimos adicionar Rodrigo ao final da lista e o desafio est√° conclu√≠do. Mas, como a ordem dos nomes da lista n√£o importa para n√≥s, vamos aproveitar para aprender mais um recurso do m√©todo splice(), em vez de usar o push().

// Primeiramente, vamos apagar a linha em que usamos o push():

// const nomes = ["Jo√£o", "Ana", "Caio", "Lara", "Marjorie", "Leo"];

// nomes.splice(1, 2);

// console.log(nomes);

// O m√©todo splice() aceita um terceiro par√¢metro. Ent√£o, vamos colocar a string "Rodrigo":

// const nomes = ["Jo√£o", "Ana", "Caio", "Lara", "Marjorie", "Leo"];

// nomes.splice(1, 2, "Rodrigo");

// console.log(nomes);

// Assim, vamos remover os nomes de Ana e Caio, e inserir Rodrigo no lugar. Ap√≥s salvar o arquivo, vamos execut√°-lo no terminal:

// node atualizando-lista.js

// [ 'Jo√£o', 'Rodrigo', 'Lara', 'Marjorie', 'Leo' ]

// Agora, temos o nome de Rodrigo na segunda posi√ß√£o da lista, onde antes estavam Caio e Ana.

// Vale relembrar a import√¢ncia de estudar o que cada m√©todo faz. Perceba que o splice() √© outro m√©todo que altera o array original, n√£o precisamos guardar um novo array em uma nova constante ‚Äî simplesmente executamos o splice() e usamos um console.log() com o array original.


// O splice √© usado para adicionar e remover elementos de uma lista, como mostra o seguinte c√≥digo:

// animaisDoAquario = ['üêã', 'üêô', 'üê¨', 'ü¶à']

// animaisDoAquario.splice(1,0,'üê†')
// animaisDoAquario.splice(3,2,'üêü')

// console.log(animaisDoAquario)

// [ 'üêã', 'üê†', 'üêô', 'üêü']

=======
const nomes = ["Jo√£o", "Ana", "Caio", "Lara", "Marjorie", "Leo"];

nomes.splice(1, 2, "Rodrigo");

console.log(nomes);


// Explica√ß√£o


// Atualizando elementos
// Temos que criar uma lista de chamada com os seguintes alunos:

// Jo√£o
// Ana
// Caio
// Lara
// Marjorie
// Leo
// Por√©m, Ana e Caio mudaram de escola e o Rodrigo entrou nessa sala. Nosso desafio ser√° atualizar a lista de chamada, removendo os nomes de Ana e Caio, e inserindo Rodrigo.

// Removendo nomes
// Anteriormente, aprendemos como remover um item do final da lista. Agora, descobriremos como remover um elemento do meio do array. No VS Code, vamos criar um arquivo chamado atualizando-lista.js. Declararemos uma constante chamada nomes que receber√° a lista atual de alunos:

// const nomes = ["Jo√£o", "Ana", "Caio", "Lara", "Marjorie", "Leo"];

// Para remover os nomes de Caio e Ana, utilizaremos outro m√©todo dos arrays do JavaScript ‚Äî o splice():

// const nomes = ["Jo√£o", "Ana", "Caio", "Lara", "Marjorie", "Leo"];

// nomes.splice();

// Em ingl√™s, o termo splice significa "emendar" ou "juntar". Cuidado para n√£o confundi-lo com o m√©todo slice() que abordamos na √∫ltima aula, j√° que seus nomes s√£o parecidos. At√© o funcionamento deles √© semelhante e pode causar confus√£o!

// O primeiro par√¢metro do m√©todo splice() √© o √≠ndice do elemento que queremos remover. Portanto, para remover o nome de Ana, passamos o √≠ndice 1:

// const nomes = ["Jo√£o", "Ana", "Caio", "Lara", "Marjorie", "Leo"];

// nomes.splice(1);

// O segundo par√¢metro √© a quantidade de itens que queremos remover a partir desse √≠ndice. Logo, para remover o nome de Ana e de Caio, informaremos o valor 2:

// const nomes = ["Jo√£o", "Ana", "Caio", "Lara", "Marjorie", "Leo"];

// nomes.splice(1, 2);

// Ap√≥s realizar o splice(), vamos imprimir a lista de nomes com um console.log():

// const nomes = ["Jo√£o", "Ana", "Caio", "Lara", "Marjorie", "Leo"];

// nomes.splice(1, 2);

// console.log(nomes);

// Vamos salvar o arquivo e execut√°-lo no terminal integrado:

// node atualizando-lista.js

// [ 'Jo√£o', 'Lara', 'Marjorie', 'Leo' ]

// Ana e Caio n√£o constam mais na lista, conseguimos remover os nomes desejados com sucesso!

// Adicionando nomes
// A seguir, vamos adicionar Rodrigo √† lista de chamada. Com os conhecimentos das aulas anteriores, sabemos que uma op√ß√£o √© usar o m√©todo push() para inserir um item:

// const nomes = ["Jo√£o", "Ana", "Caio", "Lara", "Marjorie", "Leo"];

// nomes.splice(1, 2);
// nomes.push("Rodrigo");

// console.log(nomes);

// Ap√≥s salvar as altera√ß√µes, executaremos o arquivo no terminal:

// node atualizando-lista.js

// [ 'Jo√£o', 'Lara', 'Marjorie', 'Leo', 'Rodrigo' ]

// Conseguimos adicionar Rodrigo ao final da lista e o desafio est√° conclu√≠do. Mas, como a ordem dos nomes da lista n√£o importa para n√≥s, vamos aproveitar para aprender mais um recurso do m√©todo splice(), em vez de usar o push().

// Primeiramente, vamos apagar a linha em que usamos o push():

// const nomes = ["Jo√£o", "Ana", "Caio", "Lara", "Marjorie", "Leo"];

// nomes.splice(1, 2);

// console.log(nomes);

// O m√©todo splice() aceita um terceiro par√¢metro. Ent√£o, vamos colocar a string "Rodrigo":

// const nomes = ["Jo√£o", "Ana", "Caio", "Lara", "Marjorie", "Leo"];

// nomes.splice(1, 2, "Rodrigo");

// console.log(nomes);

// Assim, vamos remover os nomes de Ana e Caio, e inserir Rodrigo no lugar. Ap√≥s salvar o arquivo, vamos execut√°-lo no terminal:

// node atualizando-lista.js

// [ 'Jo√£o', 'Rodrigo', 'Lara', 'Marjorie', 'Leo' ]

// Agora, temos o nome de Rodrigo na segunda posi√ß√£o da lista, onde antes estavam Caio e Ana.

// Vale relembrar a import√¢ncia de estudar o que cada m√©todo faz. Perceba que o splice() √© outro m√©todo que altera o array original, n√£o precisamos guardar um novo array em uma nova constante ‚Äî simplesmente executamos o splice() e usamos um console.log() com o array original.


// O splice √© usado para adicionar e remover elementos de uma lista, como mostra o seguinte c√≥digo:

// animaisDoAquario = ['üêã', 'üêô', 'üê¨', 'ü¶à']

// animaisDoAquario.splice(1,0,'üê†')
// animaisDoAquario.splice(3,2,'üêü')

// console.log(animaisDoAquario)

// [ 'üêã', 'üê†', 'üêô', 'üêü']

>>>>>>> 27be99842932f6856450deb322908e037f6a7683
// No aqu√°rio, o golfinho e o tubar√£o n√£o est√£o presentes por conta do c√≥digo animaisDoAquario.splice(3,2,'üêü'), que remove dois elementos do array, a partir da posi√ß√£o 3. Sendo assim, os elementos com √≠ndice 3 e 4 e os dois peixes entraram nas posi√ß√µes definidas pelo splice.